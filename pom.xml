<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath />
	</parent>
	<groupId>com.example</groupId>
	<artifactId>tenantDemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>tenantDemo</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>8</java.version>
		<hutool.version>5.8.12</hutool.version>
		<druid-starter>1.1.10</druid-starter>
		<mybatis-plus-boot-starter.version>3.5.3.1</mybatis-plus-boot-starter.version>
		<protobuf.version>3.19.4</protobuf.version>
		<protobuf.version.format>1.4</protobuf.version.format>
		<alibaba-thread-local>2.2.0</alibaba-thread-local>
		<lock4j.version>2.2.7</lock4j.version>

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<!-- spring data redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- druid 官方 starter -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid-starter}</version>
		</dependency>
		<!-- mybatis-plus start -->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
			<version>${mybatis-plus-boot-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-extension</artifactId>
			<version>${mybatis-plus-boot-starter.version}</version>
		</dependency>
		<!-- hutool -->
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>${hutool.version}</version>
		</dependency>
		<!-- lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 多线程值传递 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>transmittable-thread-local</artifactId>
			<version>${alibaba-thread-local}</version>
		</dependency>

		<!-- Protobuf 依赖 -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>${protobuf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java-util</artifactId>
			<version>${protobuf.version}</version>
		</dependency>

		<!-- Protobuf格式化工具 -->
		<dependency>
			<groupId>com.googlecode.protobuf-java-format</groupId>
			<artifactId>protobuf-java-format</artifactId>
			<version>${protobuf.version.format}</version>
		</dependency>

		<!-- flyway 依赖 -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<!--  forest 依赖 -->
		<dependency>
			<groupId>com.dtflys.forest</groupId>
			<artifactId>forest-spring-boot-starter</artifactId>
			<version>1.5.32</version>
		</dependency>

		<!-- 分布式锁 lock4j, 支持同时存在, 不同方法不同锁实现-->
		<!--若使用redisTemplate作为分布式锁底层，则需要引入-->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>lock4j-redis-template-spring-boot-starter</artifactId>
			<version>${lock4j.version}</version>
		</dependency>
		<!--若使用redisson作为分布式锁底层，则需要引入-->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>lock4j-redisson-spring-boot-starter</artifactId>
			<version>${lock4j.version}</version>
		</dependency>
		<!--若使用zookeeper作为分布式锁底层，则需要引入-->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>lock4j-zookeeper-spring-boot-starter</artifactId>
			<version>${lock4j.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
